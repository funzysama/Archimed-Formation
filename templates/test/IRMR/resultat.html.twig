{% extends 'main-base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
<style>
</style>
{% endblock %}
{% block page_content %}
    <div class="col-md-6">
        <div class="main-card mb-3 card">
            <div class="card-header">Graphique</div>
            <div class="card-body">
                <canvas class="marginTop3" id="myChart" width="300" height="300"></canvas>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="main-card mb-3 card">
            <div class="card-header">Resultat etendu</div>
            <div class="card-body">
                <div class="d-flex flex-sm-row justify-content-around marginTop2" data-controller="riasec">
                    {% for key, value in orderedPourcent %}
                        <div>
                            <div class="{{ key }} Image" data-riasec="{{ value|json_encode }}">
                                <figure></figure>
                            </div>
                            ( {{ value }}% )
                        </div>
                    {% endfor %}
                </div>
                <div class="marginTop2">
                    <h6>Vos 2 pôles les plus marqués :</h6>
                    <h6>RIASEC majeur : <strong>{{ resultat.majeur}}</strong></h6>
                    <h6>RIASEC mineur : <strong>{{ resultat.mineur }}</strong></h6>
                    <h6>Vos 2 pôles les moins marqués :</h6>
                    <h5><b>{{ resultat.inferieur1 }}</b></h5>
                    <h5><b>{{ resultat.inferieur2 }}</b></h5>
                    <h6>La valeur de différenciation de votre profil: <b>{{ resultat.differenciation }}</b></h6>
                    <h6>Valeur de consistance de votre profil : (à ajouter)</h6>
                </div>
                <div class="marginTop2">
                    <table class="mb-0 table">
                    <thead>
                    <tr>
                        <th></th>
                        <th>Réaliste</th>
                        <th>Investigateur</th>
                        <th>Artiste</th>
                        <th>Social</th>
                        <th>Entrepreneur</th>
                        <th>Conventionnel</th>
                    </tr>
                    </thead>
                    <tbody>
                    <tr>
                        <td>Score brute</td>
                        <td>{{ resultat.realiste }}</td>
                        <td>{{ resultat.investigateur }}</td>
                        <td>{{ resultat.artiste }}</td>
                        <td>{{ resultat.social }}</td>
                        <td>{{ resultat.entrepreneur }}</td>
                        <td>{{ resultat.conventionnel }}</td>
                    </tr>
                    <tr>
                        <td>Score étalonné</td>
                        <td>{{ resultat.realisteEtalonne }}</td>
                        <td>{{ resultat.investigateurEtalonne }}</td>
                        <td>{{ resultat.artisteEtalonne }}</td>
                        <td>{{ resultat.socialEtalonne }}</td>
                        <td>{{ resultat.entrepreneurEtalonne }}</td>
                        <td>{{ resultat.conventionnelEtalonne }}</td>
                    </tr>
                    </tbody>
                </table>
                </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block bottom_javascript %}
    <script>
        var ctx = document.getElementById('myChart').getContext('2d');
        const data = {
            labels: ['Réaliste', 'Investigateur', 'Artiste', 'Social', 'Entrepreneur', 'Conventionnel'],
            datasets: [{
                label: 'Resultats',
                data: ['{{ resultat.realiste }}', '{{ resultat.investigateur }}', '{{ resultat.artiste }}', '{{ resultat.social }}', '{{ resultat.entrepreneur }}', '{{ resultat.conventionnel }}' ],
                backgroundColor: [
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            },
                {
                label: 'Resultats étalonnés',
                data: ['{{ resultat.realisteEtalonne }}', '{{ resultat.investigateurEtalonne }}', '{{ resultat.artisteEtalonne }}', '{{ resultat.socialEtalonne }}', '{{ resultat.entrepreneurEtalonne }}', '{{ resultat.conventionnelEtalonne }}' ],
                    backgroundColor: [
                        'rgba(64, 112, 255, 0.2)'
                    ],
                    borderColor: [
                        'rgba(64, 112, 255, 1)'
                    ],
                    borderWidth: 1
            }]
        };
        const config = {
            type: 'radar',
            data: data,
            options: {
                responsive: true,
                scales: {
                    r: {
                        beginAtZero: true,
                    }
                }
            }
        }
        var myChart = new Chart(ctx, config);
    </script>
{% endblock %}
