# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    ressource_image_directory: '%kernel.project_dir%/public/uploads/ressources/images'
    pole_emploi_client_id: '%env(POLE_EMPLOI_CLIENT_ID)%'
    pole_emploi_client_secret: '%env(POLE_EMPLOI_CLIENT_SECRET)%'
    pole_emploi_scope: '%env(POLE_EMPLOI_SCOPE)%'
    artgris_file_manager:
        web_dir: "../public/uploads"
        conf:
            main:
                dir: "../public/uploads/"
                tree: false
            bc:
                dir: '../public/uploads/Bilan de Competences'
                tree: false
            vae:
                dir: '../public/uploads/VAE'
                tree: false
            perso:
                service: "custom_filemanager_config"


services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    twig.extension.intl:
        class: Twig_Extensions_Extension_Intl
        tags:
            - { name: twig.extension }
    custom_filemanager_config:
        class: App\Service\FileManagerConfService
        public: true